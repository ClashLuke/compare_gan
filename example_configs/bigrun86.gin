dataset.name = "images_256"
options.random_labels = True
options.num_classes = 1000
train_imagenet_transform.crop_method = "resize_with_pad"
options.z_dim = 140
options.g_flood = 0.05
options.d_flood = 0.20
resnet_biggan.Generator.blocks_with_attention = "128"
resnet_biggan.Discriminator.blocks_with_attention = "64"

options.architecture = "resnet_biggan_arch"
ModularGAN.conditional = True
options.batch_size = 1024
options.gan_class = @ModularGAN
options.lamba = 1 # misspelling intentional
options.training_steps = 250000
weights.initializer = "orthogonal"
spectral_norm.singular_value = "auto"

# Generator
G.batch_norm_fn = @conditional_batch_norm
G.spectral_norm = True
ModularGAN.g_use_ema = True
resnet_biggan.Generator.hierarchical_z = True
resnet_biggan.Generator.embed_y = True
standardize_batch.decay = 0.9
standardize_batch.epsilon = 1e-5
standardize_batch.use_moving_averages = True
standardize_batch.use_cross_replica_mean = True
## NOTE: testing EvoNorm-s1 experimental use! currently: BN
# standardize_batch.use_evonorm = False
# BigGanResNetBlock.use_relu = True
# resnet_biggan.Generator.use_relu = True

# Discriminator
options.disc_iters = 2
D.spectral_norm = True
resnet_biggan.Discriminator.project_y = True

# Loss and optimizer
loss.fn = @hinge
penalty.fn = @no_penalty
ModularGAN.g_lr = 0.0000666
ModularGAN.d_lr = 0.0005
ModularGAN.g_optimizer_fn = @tf.train.AdamOptimizer
ModularGAN.d_optimizer_fn = @tf.train.AdamOptimizer
tf.train.AdamOptimizer.beta1 = 0.0
tf.train.AdamOptimizer.beta2 = 0.999

z.distribution_fn = @tf.random.normal
eval_z.distribution_fn = @tf.random.normal

run_config.iterations_per_loop = 1000
run_config.save_checkpoints_steps = 1000

## Multi-dataset run: mix in e621-s+e621-s-Portraits, Danbooru2019 SFW 512, Danbooru2019 Portraits, Danbooru2019 Figures, Danbooru2019 PALM
## Total _n_=4,513,983 (command: `gsutil cat 'gs://dota-euw4a/datasets/e621-s/e621-s-filenames.txt' 'gs://dota-euw4a/datasets/e621-portraits-s-512/e621-portraits-s-512-filenames.txt' 'gs://dota-euw4a/datasets/danbooru2019-s/danbooru2019-s-filenames.txt' 'gs://dota-euw4a/datasets/portraits/portraits-filenames.txt' 'gs://dota-euw4a/datasets/danbooru2019figures/danbooru2019figures-filenames.txt' 'gs://dota-euw4a/datasets/palm/palm-filenames.txt'`)
# options.datasets = "gs://dota-euw4a/datasets/e621-s/e621-s-0*,gs://dota-euw4a/datasets/e621-portraits-s-512/e621-portraits-s-512-0*,gs://dota-euw4a/datasets/danbooru2019-s/danbooru2019-s-0*,gs://dota-euw4a/datasets/portraits/portraits-0*,gs://dota-euw4a/datasets/danbooru2019figures/danbooru2019figures-0*,gs://dota-euw4a/datasets/palm/palm-0*"

## Single-dataset run: Figures only
options.datasets = "gs://dota-euw4a/datasets/danbooru2019figures/danbooru2019figures-0*"

resnet_biggan.Generator.ch = 96
resnet_biggan.Discriminator.ch = 96

# balancing:
ModularGAN.g_lr_mul = 1.1
ModularGAN.d_lr_mul = 5
options.description = "BigGAN test run, on Figures only; Batchnorm restored. Testing reversion of moving_averages (disabling it is more efficient, but possibly has screwed up BN all along?)"
